<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tpadsz.servlet.dao.UserDao">

    <resultMap id="values" type="map">
        <result property="createDate" column="createDate" javaType="date"/>
        <result property="luckNum" column="luckValues" javaType="int"/>
    </resultMap>

    <resultMap id="types" type="map">
        <result property="id" column="id" javaType="string"/>
        <result property="configs" column="configs" javaType="string"/>
        <result property="detail" column="detail" javaType="string"/>
    </resultMap>

    <select id="getByType" parameterType="string" resultMap="types">
        SELECT a.id id,a.configs configs,a.detail detail from ctc_hq.f_task_setting_app a WHERE a.type=#{type}
    </select>

    <insert id="save" parameterType="map">
        INSERT into test.anniversary_activity(myself,friends) VALUES(#{myself},#{friends})
    </insert>
    <select id="getValues" parameterType="string" resultMap="values">
        SELECT u.create_date createDate,SUM(a.luckValues) luckValues
        from uic.f_app_user u
        LEFT JOIN anniversary_activity a on u.login_name=a.myself
        and u.login_name=#{loginName}
        and u.app_id='9'
        GROUP BY a.myself
        ORDER BY luckValues desc
    </select>

    <select id="getLuck" parameterType="string" resultType="int">
        SELECT SUM(a.luckValues) luckValues
        from anniversary_activity a
        WHERE a.myself=#{loginName}
        GROUP BY a.myself
    </select>

    <select id="getDate" parameterType="string" resultType="date">
        SELECT u.create_date createDate
        from uic.f_app_user u
        where u.login_name=#{loginName}
        and u.app_id='9'
    </select>
    <!-- select语句 -->
    <select id="selectUserByID" parameterType="int" resultType="User">
        select * from t_user where id = #{id}
    </select>

    <!-- 定义的resultMap，可以解决类的属性名和数据库列名不一致的问题-->
    <resultMap type="User" id="userResultMap">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="pwd" column="pwd"/>
    </resultMap>

    <!-- 返回list的select语句，注意 resultMap的值是指向前面定义好的 -->
    <select id="selectUsersByName" parameterType="string" resultMap="userResultMap">
        select * from hongjianTest where id = #{id}
    </select>

    <select id="selectAll" resultType="User">
        select * from hongjianTest
    </select>


    <insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        <!--<selectKey keyProperty="id" resultType="int">-->
        <!--select LAST_INSERT_ID()-->
        <!--</selectKey>-->
        insert into student(name,createDate) values(#{name},#{createDate})
    </insert>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into hongjianTest(name,pwd) values
        <foreach collection="list" item="u" index="index" separator=",">
             (#{u.name},#{u.pwd})
        </foreach>
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        <foreach close="" collection="list" index="index" item="u" open="" separator=";">
            insert into hongjianTest(name,pwd) values(#{u.name},#{u.pwd})
        </foreach>
    </insert>

    <update id="updateUser" parameterType="User">
        update hongjianTest set name=#{name},pwd=#{pwd} where id=#{id}
    </update>

    <update id="update" parameterType="User">
        update t_user set is_delete=is_delete+1 where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="String">
        delete from hongjianTest where id=#{id}
    </delete>

    <update id="batchUpdate" parameterType="java.util.List">

        <foreach collection="list" item="user" index="index" open="" close="" separator=";">
            update hongjianTest set name=#{user.name},pwd=#{user.pwd} where id = #{user.id}
        </foreach>

    </update>
</mapper>